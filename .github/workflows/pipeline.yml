name: Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    env:
        TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        PORT: ${{ secrets.PORT }}
        SECRET: ${{ secrets.SECRET }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout directory
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm install

      - name: Start PostgreSQL container
        run: |
          docker run --name postgres -d -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 postgres
          # Wait for PostgreSQL to be ready
          docker exec postgres sh -c 'while ! pg_isready -q -h localhost -p 5432 -U postgres; do sleep 1; done'

      - name: Run tests
        run: npm run test

      - name: Trigger Deployment
        if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') }}
        run: fly deploy

      - name: Stop PostgreSQL container
        run: docker stop postgres
